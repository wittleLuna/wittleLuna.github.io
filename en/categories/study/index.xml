<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>STUDY on wittleLuna&#39;s blog</title>
    <link>https://wittleLuna.github.io/en/categories/study/</link>
    <description>Recent content from wittleLuna&#39;s blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    
    <managingEditor>syaz23277@gmail.com (wittleLuna)</managingEditor>
    <webMaster>syaz23277@gmail.com (wittleLuna)</webMaster>
    
    <copyright>All articles on this blog are licensed under the BY-NC-SA license agreement unless otherwise stated. Please indicate the source when reprinting!</copyright>
    
    <lastBuildDate>Sat, 25 Oct 2025 17:41:41 +0800</lastBuildDate>
    
    
    <atom:link href="https://wittleLuna.github.io/en/categories/study/index.xml" rel="self" type="application/rss&#43;xml" />
    

    
    

    <item>
      <title>Getting into Competitive Programming from Zero</title>
      <link>https://wittleLuna.github.io/en/post/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%85%A5%E5%9D%91%E7%BC%96%E7%A8%8B%E6%AF%94%E8%B5%9B/</link>
      <pubDate>Sat, 25 Oct 2025 00:00:00 &#43;0000</pubDate>
      <author>syaz23277@gmail.com (wittleLuna)</author>
      <guid>https://wittleLuna.github.io/en/post/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%85%A5%E5%9D%91%E7%BC%96%E7%A8%8B%E6%AF%94%E8%B5%9B/</guid>
      <description>
        <![CDATA[<h1>Getting into Competitive Programming from Zero</h1><p>Author: wittleLuna(syaz23277@gmail.com)</p>
        
          <h1 id="从零开始入坑编程比赛">
<a class="header-anchor" href="#%e4%bb%8e%e9%9b%b6%e5%bc%80%e5%a7%8b%e5%85%a5%e5%9d%91%e7%bc%96%e7%a8%8b%e6%af%94%e8%b5%9b"></a>
从零开始，入坑编程比赛
</h1><h2 id="1-什么是编程比赛">
<a class="header-anchor" href="#1-%e4%bb%80%e4%b9%88%e6%98%af%e7%bc%96%e7%a8%8b%e6%af%94%e8%b5%9b"></a>
1. 什么是编程比赛？
</h2><p>编程比赛，一般称为程序设计竞赛，要求选手在有限的时间内编写程序，分析和解决问题。</p>
<p>国内比较出名的比赛有：</p>
<ul>
<li>
<p>OI（Olympiad in Informatics，信息学奥林匹克竞赛），是高中五大学科竞赛之一。</p>
</li>
<li>
<p>ICPC（International Collegiate Programming Contest，国际大学生程序设计竞赛），由 ICPC 基金会（ICPC Foundation）举办，是最具影响力的大学生计算机竞赛。由于以前 ACM 赞助这个竞赛，也有很多人习惯叫它 ACM 竞赛。</p>
</li>
<li>
<p>蓝桥杯，由中华人民共和国工业和信息化部人才交流中心主办（据相关新闻，2026届起已与工信部脱钩），从中小学到大学高校一直备受青睐，是参加人数多，知名度较高的比赛之一。</p>
</li>
<li>
<p>码蹄杯，是由全国高等学校计算机教育研究会主办、清华大学出版社承办的编程竞赛，截至2025年举办了六届，也是目前备受青睐的，知名度较高的编程比赛之一。</p>
</li>
<li>
<p>百度之星，由百度公司于2005年发起并主办的年度程序设计竞赛，初赛不限制参赛选手身份要求，是影响力较大，含金量较高的编程比赛之一。</p>
</li>
</ul>
<h3 id="11-关于难度与含金量">
<a class="header-anchor" href="#11-%e5%85%b3%e4%ba%8e%e9%9a%be%e5%ba%a6%e4%b8%8e%e5%90%ab%e9%87%91%e9%87%8f"></a>
1.1 关于难度与含金量
</h3><p><img src="https://i.mji.rip/2025/10/25/a0f7dfdcc838614a0fd95124e8862f5a.png" alt="image"></p>
<blockquote>
<p>注：关于评分码蹄杯比蓝桥杯难度高：码蹄杯题目数量更大，且难度与蓝桥杯大差不差（有些更难）。另外该图表只反映外界的普遍共识，但对于我们普通人来说，无论你参加了哪个比赛都很棒！</p></blockquote>
<hr>
<h2 id="2-关于各种算法比赛的介绍">
<a class="header-anchor" href="#2-%e5%85%b3%e4%ba%8e%e5%90%84%e7%a7%8d%e7%ae%97%e6%b3%95%e6%af%94%e8%b5%9b%e7%9a%84%e4%bb%8b%e7%bb%8d"></a>
2. 关于各种算法比赛的介绍
</h2><h3 id="21-不同的赛制">
<a class="header-anchor" href="#21-%e4%b8%8d%e5%90%8c%e7%9a%84%e8%b5%9b%e5%88%b6"></a>
2.1 不同的赛制
</h3><p>根据不同的比赛规则，需要采取不同的策略来完成比赛。</p>
<h3 id="22-比赛规则之如何评分">
<a class="header-anchor" href="#22-%e6%af%94%e8%b5%9b%e8%a7%84%e5%88%99%e4%b9%8b%e5%a6%82%e4%bd%95%e8%af%84%e5%88%86"></a>
2.2 比赛规则之如何评分
</h3><p>每道算法题会有若干个检测点。检测点具体是什么东西，如何判断的呢？</p>
<p>举个例子，你编写了一个程序，现在有各种各样的用户来做测试，如果一个用户用完你的程序没有问题，体验好，那你就通过了检测。反之，如果用户做出了你没考虑到的操作，导致程序失灵出现错误，那么这个检测你就没有通过。</p>
<p>对应到程序竞赛中来说，程序每通过一个样例，没有报错，输出了符合答案预期的结果，那么这个检测点你就通过了，反之则没有通过。一般一道题会有几十个，甚至上百个这样的样例来全面，系统的检测你的程序设计是否合理（包括程序设计方法，时间，空间复杂度等多维度综合考虑）。</p>
<h3 id="23-一道题举例">
<a class="header-anchor" href="#23-%e4%b8%80%e9%81%93%e9%a2%98%e4%b8%be%e4%be%8b"></a>
2.3 一道题举例
</h3><p><strong>蓝桥杯官网[19728 拼十字]</strong></p>
<p>官网题库练习界面，有调试和提交检测按钮。调试按钮使用第一个节点的测试数据测试程序能不能得到正确结果，提交检测会检测所有测试数据，最后给出完整的结果。
<img src="https://i.postimg.cc/bJYvGGMH/20250122095816.png" alt="image"></p>
<p>怎样的答案才算是正确答案？
1.程序逻辑正确
2.满足时间复杂度和空间复杂度的要求</p>
<p><img src="https://i.postimg.cc/prpXZwPm/20250122095952.png" alt="image"></p>
<p>根据选择使用的算法不同，复杂度不同，通过率会有差别。20个检测点，使用回溯算法，通过6个，得6分。</p>
<p><img src="https://i.postimg.cc/DZCw1v3V/20250122095909.png" alt="image"></p>
<p><img src="https://i.postimg.cc/PJ9fFSq2/20250122095858.jpg" alt="image"></p>
<p><strong>==在正式比赛中，需要在指定位置上传自己的程序代码。看不到提交后的结果，不能进行调试。检测方法就是根据题目要求，自己想例子手动测试。==</strong></p>
<h3 id="24-不同规则介绍">
<a class="header-anchor" href="#24-%e4%b8%8d%e5%90%8c%e8%a7%84%e5%88%99%e4%bb%8b%e7%bb%8d"></a>
2.4 不同规则介绍
</h3><h4 id="241-icpcacm">
<a class="header-anchor" href="#241-icpcacm"></a>
2.4.1 ICPC/ACM
</h4><p>形式：3人一队、1台电脑、5小时左右，题目 8–13 道。</p>
<p>评分：按解题数排序；同解题数按罚时（最后一次通过时间之和 + 每题若干分钟的错误罚时）升序。</p>
<p>特点：强调分工协作与代码实现速度；不允许上网；常见于 ICPC、CCPC 等。</p>
        
        <hr><p>Published on 2025-10-25 at <a href='https://wittleLuna.github.io/'>wittleLuna's blog</a>, last modified on 2025-10-25</p>]]>
      </description>
      
        <category>STUDY</category>
      
    </item>
    
    

    <item>
      <title>Summary of IELTS Reading Judgment Items</title>
      <link>https://wittleLuna.github.io/en/post/%E9%98%85%E8%AF%BB%E8%A7%A6%E5%8F%91%E8%AF%8D/</link>
      <pubDate>Tue, 20 May 2025 00:00:00 &#43;0000</pubDate>
      <author>syaz23277@gmail.com (wittleLuna)</author>
      <guid>https://wittleLuna.github.io/en/post/%E9%98%85%E8%AF%BB%E8%A7%A6%E5%8F%91%E8%AF%8D/</guid>
      <description>
        <![CDATA[<h1>Summary of IELTS Reading Judgment Items</h1><p>Author: wittleLuna(syaz23277@gmail.com)</p>
        
          <h1 id="-雅思阅读判断题十大陷阱类型--触发语速查卡">
<a class="header-anchor" href="#-%e9%9b%85%e6%80%9d%e9%98%85%e8%af%bb%e5%88%a4%e6%96%ad%e9%a2%98%e5%8d%81%e5%a4%a7%e9%99%b7%e9%98%b1%e7%b1%bb%e5%9e%8b--%e8%a7%a6%e5%8f%91%e8%af%ad%e9%80%9f%e6%9f%a5%e5%8d%a1"></a>
📘 雅思阅读判断题十大陷阱类型 + 触发语速查卡
</h1><table>
  <thead>
      <tr>
          <th>✅ 陷阱类型</th>
          <th>🚨 特征关键词</th>
          <th>🎯 触发语口诀</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>1️⃣ <strong>主语错配</strong></td>
          <td>the author / researchers / experts / some / all</td>
          <td><strong>“谁说的？别乱代入作者。”</strong></td>
      </tr>
      <tr>
          <td>2️⃣ <strong>程度误导</strong></td>
          <td>all, always, never, only</td>
          <td><strong>“看到 always / never，要提高警觉。”</strong></td>
      </tr>
      <tr>
          <td>3️⃣ <strong>范围偷换</strong></td>
          <td>some ↔ most / people ↔ students</td>
          <td><strong>“小变大，大变小，一律警惕。”</strong></td>
      </tr>
      <tr>
          <td>4️⃣ <strong>时态陷阱</strong></td>
          <td>used to / now / recent studies</td>
          <td><strong>“时间变了，观点也会变！”</strong></td>
      </tr>
      <tr>
          <td>5️⃣ <strong>语气反转</strong></td>
          <td>however, although, but</td>
          <td><strong>“but 出没，反转常有。”</strong></td>
      </tr>
      <tr>
          <td>6️⃣ <strong>观点 vs 事实</strong></td>
          <td>“argue”, “believe” vs “confirm”, “prove”</td>
          <td><strong>“观点 ≠ 事实，别搞混！”</strong></td>
      </tr>
      <tr>
          <td>7️⃣ <strong>模糊词对撞</strong></td>
          <td>may, might vs must / will</td>
          <td><strong>“原文说可能，题干说一定 → FALSE！”</strong></td>
      </tr>
      <tr>
          <td>8️⃣ <strong>双面观点</strong></td>
          <td>some believe X, others believe Y</td>
          <td><strong>“题干说一致？直接判 FALSE。”</strong></td>
      </tr>
      <tr>
          <td>9️⃣ <strong>同义换骨</strong></td>
          <td>“cut costs” vs “save money”, “concerned” vs “worried”</td>
          <td><strong>“换壳不换意，看透词芯。”</strong></td>
      </tr>
      <tr>
          <td>🔟 <strong>因果关系误判</strong></td>
          <td>“A happened and B happened” ≠ “A caused B”</td>
          <td><strong>“并列 ≠ 因果，小心脑补！”</strong></td>
      </tr>
      <tr>
          <td>触发语</td>
          <td>常见误判</td>
          <td>正确处理</td>
      </tr>
      <tr>
          <td>the country / this practice / such an approach</td>
          <td>忽略代词指代的具体对象，觉得信息不明确（误选 NG）</td>
          <td>回头找前文最近明确提到的对象，代入判断是否对应</td>
      </tr>
      <tr>
          <td>题目中带有“所有人 / 所有人群 / 各种情况 / 所有产品”等广泛词汇，如：people of all ages， all researchers，every city</td>
          <td>速查策略：看到“泛指 + 范围大” → 马上警惕：❗这类往往是NG陷阱</td>
          <td>应对方法：✅回原文精准找范围，有说“所有年龄”才选True ❌ 原文没有提范围，别自己脑补 → NG！</td>
      </tr>
      <tr>
          <td>分类</td>
          <td>典型陷阱</td>
          <td>提醒语</td>
      </tr>
      <tr>
          <td>逻辑误判：全称 vs 部分</td>
          <td>“Only some believe&hellip;” ≠ “Not all believe&hellip;” ≠ “有人反对”</td>
          <td>没有反对者就不能判 False！选 NG！</td>
      </tr>
  </tbody>
</table>
<table>
  <thead>
      <tr>
          <th>触发表达</th>
          <th>处理方式</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>看到时间线（Today / However / 1968）</td>
          <td>警惕不是说“时间久”，而是“对比不同现象”</td>
      </tr>
      <tr>
          <td><strong>a lot of / most / many / the majority of</strong></td>
          <td>小心！如果原文没有明确数量词，就不能选 True</td>
      </tr>
  </tbody>
</table>
<table>
  <thead>
      <tr>
          <th>陷阱类型</th>
          <th>关键词</th>
          <th>判断原则</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><strong>绝对化表述</strong></td>
          <td>only, all, always, exclusive, must</td>
          <td>一旦原文出现“非绝对”例外，就要选False</td>
      </tr>
      <tr>
          <td><strong>范围扩大/缩小</strong></td>
          <td>mainly vs exclusively, some vs all</td>
          <td>稍微夸大/缩小范围都可能导致False</td>
      </tr>
      <tr>
          <td><strong>时间变化未察觉</strong></td>
          <td>in early times vs later</td>
          <td>如果题干忽视了发展变化，易误判为True</td>
      </tr>
  </tbody>
</table>
<table>
  <thead>
      <tr>
          <th>题干表达方式</th>
          <th>原文缺失要素</th>
          <th>答案</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>某人 <strong>was surprised / amazed / shocked / happy / afraid</strong>&hellip;</td>
          <td>原文没有出现该态度或感受词</td>
          <td><strong>NG</strong></td>
      </tr>
      <tr>
          <td>明确指某个具体团队或人（如 Shipton’s team）做了某事</td>
          <td>原文中没有明确该行为由他们做出</td>
          <td><strong>NG</strong></td>
      </tr>
      <tr>
          <td>合并了多个要素：主语 + 行为 + 态度</td>
          <td>原文中缺少其中任一要素</td>
          <td><strong>NG</strong></td>
      </tr>
  </tbody>
</table>
<table>
  <thead>
      <tr>
          <th>典型表现</th>
          <th>错误判断的原因</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>题干添加了“谁做了什么”</td>
          <td>原文没有明说，但你以为是合理推断 → 选True</td>
      </tr>
      <tr>
          <td>原文说“某研究讨论了某变量”</td>
          <td>但没有说是“谁做了”或者“是不是作者做的”</td>
      </tr>
  </tbody>
</table>
<hr>
<p>题干的范围“比原文窄” = False；比原文“宽”但未明确 = Not Given；完全一致 = True。</p>
        
        <hr><p>Published on 2025-05-20 at <a href='https://wittleLuna.github.io/'>wittleLuna's blog</a>, last modified on 2025-05-20</p>]]>
      </description>
      
        <category>STUDY</category>
      
    </item>
    
    

    <item>
      <title>[LanQiao CUP]Introduction</title>
      <link>https://wittleLuna.github.io/en/post/%E8%93%9D%E6%A1%A5%E6%9D%AF%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Wed, 22 Jan 2025 00:00:00 &#43;0000</pubDate>
      <author>syaz23277@gmail.com (wittleLuna)</author>
      <guid>https://wittleLuna.github.io/en/post/%E8%93%9D%E6%A1%A5%E6%9D%AF%E4%BB%8B%E7%BB%8D/</guid>
      <description>
        <![CDATA[<h1>[LanQiao CUP]Introduction</h1><p>Author: wittleLuna(syaz23277@gmail.com)</p>
        
          <h2 id="蓝桥杯介绍">
<a class="header-anchor" href="#%e8%93%9d%e6%a1%a5%e6%9d%af%e4%bb%8b%e7%bb%8d"></a>
蓝桥杯介绍
</h2><h3 id="蓝桥杯赛制">
<a class="header-anchor" href="#%e8%93%9d%e6%a1%a5%e6%9d%af%e8%b5%9b%e5%88%b6"></a>
蓝桥杯赛制
</h3><p>IO赛制</p>
<p><strong>赛制特点</strong>：
个人赛：每个选手独立参赛。
<strong>比赛时长</strong>：4小时。
题目数量：通常8-10道题。
<strong>答题方式</strong>：选手每题可提交多次，但==仅保留最后一次提交结果，比赛期间无法看到评测结果==。
<strong>题目类型</strong>：单结果题+编程题。单结果题：只需要输出题目问题的答案。编程题：有多个测试点，每个测试点有一个正确答案。
<strong>评分规则</strong>：每道题包含多个测试点，根据通过的测试点数量得分，部分数据通过也能获得部分分数。最终得分在赛后公布。</p>
<p>OI赛制最大的特点在于考试的时候看不到评测结果，不像ACM赛制可以立马看到结果，知道自己对不对，但是好处是有部分分，过了几个点也有分拿。</p>
<p><strong>图例[19728 拼十字]</strong></p>
<p>官网题库练习界面，有调试和提交检测按钮。调试按钮使用第一个节点的测试数据测试程序能不能得到正确结果，提交检测会检测所有测试数据，最后给出完整的结果。
<img src="https://i.postimg.cc/bJYvGGMH/20250122095816.png" alt="image"></p>
<p>怎样的答案才算是正确答案？
1.程序逻辑正确
2.满足时间复杂度和空间复杂度的要求</p>
<p><img src="https://i.postimg.cc/prpXZwPm/20250122095952.png" alt="image"></p>
<p>根据选择使用的算法不同，复杂度不同，通过率会有差别。20个检测点，使用回溯算法，通过6个，得6分。</p>
<p><img src="https://i.postimg.cc/DZCw1v3V/20250122095909.png" alt="image"></p>
<p><img src="https://i.postimg.cc/PJ9fFSq2/20250122095858.jpg" alt="image"></p>
<p><strong>==在正式比赛中，需要在指定位置上传自己的程序代码。看不到提交后的结果，不能进行调试。检测方法就是根据题目要求，自己想例子手动测试。==</strong></p>
<h2 id="蓝桥杯常用数据结构">
<a class="header-anchor" href="#%e8%93%9d%e6%a1%a5%e6%9d%af%e5%b8%b8%e7%94%a8%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84"></a>
蓝桥杯常用数据结构
</h2><h3 id="列表数组">
<a class="header-anchor" href="#%e5%88%97%e8%a1%a8%e6%95%b0%e7%bb%84"></a>
<strong>列表(数组)</strong>
</h3><ol>
<li><strong>特点</strong>：
<ul>
<li>连续存储，支持随机访问，索引复杂度为 \(O(1)\)。</li>
<li>插入、删除复杂度为 \(O(n)\)。</li>
</ul>
</li>
<li><strong>应用场景</strong>：
<ul>
<li>简单的序列存储（如题目输入输出）。</li>
<li>作为动态数组的基础结构。</li>
</ul>
</li>
<li><strong>蓝桥杯常见题型</strong>：
<ul>
<li>前缀和：求连续子数组的和。</li>
<li>双指针：查找满足条件的子数组或子序列。</li>
</ul>
</li>
<li><strong>例题</strong>：
<ul>
<li>给定一个数组，找到和为目标值的连续子数组。</li>
</ul>
</li>
</ol>
<blockquote>
<p>给你一个整数数组 nums 和一个整数 k ，请你统计并返回 该数组中和为 k 的子数组的个数 。</p>
<p>子数组是数组中元素的连续非空序列。</p>
<p>示例 1：</p>
<p>输入：nums = [1,1,1], k = 2
输出：2
示例 2：</p>
<p>输入：nums = [1,2,3], k = 3
输出：2</p></blockquote>
<p>解题思路：前缀和</p>
        
        <hr><p>Published on 2025-01-22 at <a href='https://wittleLuna.github.io/'>wittleLuna's blog</a>, last modified on 2025-01-22</p>]]>
      </description>
      
        <category>STUDY</category>
      
    </item>
    
  </channel>
</rss>
